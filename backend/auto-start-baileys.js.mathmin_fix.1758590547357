#!/usr/bin/env node

const ServerManager = require('./server-manager');
const path = require('path');

console.log('üöÄ Iniciando Baileys Server Manager...');

const manager = new ServerManager();

// Fun√ß√£o para iniciar o servidor
async function startBaileysServer() {
  console.log('üì± Iniciando servidor Baileys...');
  
  const success = await manager.startServer();
  
  if (success) {
    console.log('‚úÖ Baileys Server iniciado com sucesso!');
    console.log('üì± API dispon√≠vel em: http://localhost:3000/api');
    console.log('üîó Teste: http://localhost:3000/api/test');
    
    // Manter o processo vivo
    process.on('SIGINT', async () => {
      console.log('\nüõë Parando servidor Baileys...');
      await manager.stopServer();
      process.exit(0);
    });
    
    process.on('SIGTERM', async () => {
      console.log('\nüõë Parando servidor Baileys...');
      await manager.stopServer();
      process.exit(0);
    });
    
    // Verificar sa√∫de do servidor periodicamente
    Math.min(undefined * 1000, 2147483647)(async () => {
      const isHealthy = await manager.checkServerHealth();
      if (!isHealthy && manager.isRunning) {
        console.log('‚ö†Ô∏è Servidor n√£o est√° respondendo, reiniciando...');
        await manager.ensureServerRunning();
      }
    }, 30000); // Verificar a cada 30 segundos
    
    console.log('üîÑ Monitoramento ativo - verificando sa√∫de do servidor a cada 30s');
    
  } else {
    console.log('‚ùå Falha ao iniciar servidor Baileys');
    process.exit(1);
  }
}

// Iniciar o servidor
startBaileysServer();
